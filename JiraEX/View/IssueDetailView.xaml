<UserControl x:Class="JiraEX.View.IssueDetailView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:JiraEX.View"
             xmlns:controls="clr-namespace:JiraEX.Controls"
             xmlns:vsui="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.14.0"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             Background="{DynamicResource ToolWindowBackgroundBrushKey}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary x:Uid="VisualStudioThemeResources"
					Source="pack://application:,,,/JiraEX;component/Theme/VisualStudioThemeResources.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <controls:BooleanToVisibilityConverter x:Key="TrueToVisibleConverter" />
            <controls:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
            <controls:BooleanToVisibilityConverter x:Key="FalseToVisibleConverter" IsReversed="True" />
        </ResourceDictionary>
    </UserControl.Resources>

    <ScrollViewer VerticalScrollBarVisibility="Auto">
        <StackPanel Orientation="Vertical"
                        Margin="8 0 8 0">

            <!-- Summary -->
            <Grid Margin="0 0 0 10">
                <TextBlock Text="{Binding Issue.Fields.Summary}" 
                        TextWrapping="Wrap"
                        VerticalAlignment="Center"
                        Visibility="{Binding IsEditingSummary, Converter={StaticResource FalseToVisibleConverter}}"
                        Style="{StaticResource TitleText}">
                    <TextBlock.InputBindings>
                        <MouseBinding Command="{Binding EditSummaryCommand}" MouseAction="LeftClick" />
                    </TextBlock.InputBindings>
                </TextBlock>

                <TextBox Text="{Binding Issue.Fields.Summary}" 
                        TextWrapping="Wrap"
                        VerticalAlignment="Center"
                        Visibility="{Binding IsEditingSummary, Converter={StaticResource TrueToVisibleConverter}}"/>
            </Grid>

            <StackPanel Orientation="Horizontal">
                <Button Command="{Binding ConfirmEditSummaryCommand}" CommandParameter="{Binding ElementName=This}"
                        Visibility="{Binding IsEditingSummary, Converter={StaticResource TrueToVisibleConverter}}"
                        Content="Save" 
                        HorizontalAlignment="Left"
                        Height="25" x:Name="ConfirmEditSummary" Width="75" Margin="0 0 5 10"/>

                <Button Command="{Binding CancelEditSummaryCommand}" CommandParameter="{Binding ElementName=This}"
                            Visibility="{Binding IsEditingSummary, Converter={StaticResource TrueToVisibleConverter}}"
                            Content="Cancel" 
                            HorizontalAlignment="Left"
                            Height="25" x:Name="CancelEditSummary" Width="75" Margin="0 0 0 10"/>
            </StackPanel>

            <!-- Parent, Type, Status, Priority -->
            <StackPanel Orientation="Horizontal">
                <Border HorizontalAlignment="Left" VerticalAlignment="Center" CornerRadius="2" Padding="5 1" Margin="0 0 5 0" BorderThickness="1" BorderBrush="#FF4B4D50"
                            Visibility="{Binding IsSubTask, Converter={StaticResource TrueToVisibleConverter}}">
                    <TextBlock>
                            <Hyperlink Command="{Binding ShowIssueCommand}" CommandParameter="{Binding Issue.Fields.Parent}">
                                <TextBlock FontFamily="Consolas" TextTrimming="CharacterEllipsis" ToolTip="{Binding Issue.Fields.Parent.Key, Mode=OneWay}" Text="{Binding Issue.Fields.Parent.Key, Mode=OneWay}" />
                            </Hyperlink>
                        </TextBlock>
                </Border>

                <TextBlock Style="{StaticResource TitleText}" Text="/" Margin="0 0 5 0"
                               Visibility="{Binding IsSubTask, Converter={StaticResource TrueToVisibleConverter}}"/>

                <Border HorizontalAlignment="Left" VerticalAlignment="Center" CornerRadius="2" Padding="5 1" Margin="0 0 5 0"  BorderThickness="1" BorderBrush="#FF4B4D50">
                    <TextBlock FontFamily="Consolas" TextTrimming="CharacterEllipsis" ToolTip="{Binding Issue.Fields.IssueType.Name, Mode=OneWay}" Text="{Binding Issue.Fields.IssueType.Name, Mode=OneWay}" />
                </Border>

                <Grid>
                    <Border HorizontalAlignment="Left" VerticalAlignment="Center" CornerRadius="2" Padding="5 1" Margin="0 0 5 0"  BorderThickness="1" BorderBrush="#FF4B4D50"
                                        Visibility="{Binding IsEditingTransition, Converter={StaticResource FalseToVisibleConverter}}">
                        <TextBlock FontFamily="Consolas" TextTrimming="CharacterEllipsis" ToolTip="{Binding SelectedTransition.Name, Mode=OneWay}" Text="{Binding SelectedTransition.Name, Mode=OneWay}">
                            <TextBlock.InputBindings>
                                <MouseBinding Command="{Binding EditTransitionCommand}" MouseAction="LeftClick" />
                            </TextBlock.InputBindings>
                        </TextBlock>
                    </Border>

                    <ComboBox ItemsSource="{Binding TransitionList}"
                                Margin="0 0 5 0"
                                DisplayMemberPath="Name"
                                SelectedValuePath="Id"
                                Visibility="{Binding IsEditingTransition, Converter={StaticResource TrueToVisibleConverter}}"
                                SelectedValue="{Binding Path=Name}"
                                SelectedItem="{Binding SelectedTransition}">
                        <ComboBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ComboBoxItem}">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            </Style>
                        </ComboBox.ItemContainerStyle>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeave">
                                <i:InvokeCommandAction Command="{Binding CancelEditTransitionCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                </Grid>

                <Grid Visibility="{Binding IsPriorityEditable, Converter={StaticResource TrueToVisibleConverter}}">
                    <Border HorizontalAlignment="Left" VerticalAlignment="Center" CornerRadius="2" Margin="0 0 5 0" BorderThickness="1" BorderBrush="{Binding SelectedPriority.StatusColor, Mode=OneWay}"
                                        Visibility="{Binding IsEditingPriority, Converter={StaticResource FalseToVisibleConverter}}">
                        <StackPanel Orientation="Horizontal">
                            <Border HorizontalAlignment="Stretch" Width="5" Background="{Binding SelectedPriority.StatusColor, Mode=OneWay}" Margin="0 0 5 0"></Border>
                            <TextBlock FontFamily="Consolas" TextTrimming="CharacterEllipsis" ToolTip="{Binding SelectedPriority.Name, Mode=OneWay}" Text="{Binding SelectedPriority.Name, Mode=OneWay}">
                                <TextBlock.InputBindings>
                                    <MouseBinding Command="{Binding EditPriorityCommand}" MouseAction="LeftClick" />
                                </TextBlock.InputBindings>
                            </TextBlock>
                            <Border HorizontalAlignment="Stretch" Width="5" Background="{Binding SelectedPriority.StatusColor, Mode=OneWay}" Margin="5 0 0 0"></Border>
                        </StackPanel>
                    </Border>

                    <ComboBox ItemsSource="{Binding PriorityList}"
                                Margin="0 0 5 0"
                                DisplayMemberPath="Name"
                                SelectedValuePath="Id"
                                Visibility="{Binding IsEditingPriority, Converter={StaticResource TrueToVisibleConverter}}"
                                SelectedValue="{Binding Path=Name}"
                                SelectedItem="{Binding SelectedPriority}">
                        <ComboBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ComboBoxItem}">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            </Style>
                        </ComboBox.ItemContainerStyle>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeave">
                                <i:InvokeCommandAction Command="{Binding CancelEditPriorityCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                </Grid>
            </StackPanel>

            <!-- Created, Updated -->
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />

                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Label Grid.Row="0" Grid.Column="0" Style="{StaticResource LabelFaded}">Created</Label>
                <TextBlock Grid.Row="0" Grid.Column="1" Style="{StaticResource PlainTextFaded}"
                                   Text="{Binding Issue.Fields.Created, Mode=OneWay}"/>

                <Label Grid.Row="1" Grid.Column="0" Style="{StaticResource LabelFaded}">Updated</Label>
                <TextBlock Grid.Row="1" Grid.Column="1" Opacity="0.5" Style="{StaticResource PlainTextFaded}"
                                   Text="{Binding Issue.Fields.Updated, Mode=OneWay}"/>
            </Grid>

            <!-- Add attachment, Create sub-task-->
            <StackPanel Orientation="Horizontal">
                <TextBlock Style="{StaticResource PlainText}" Margin="0 0 10 0">
                            <Hyperlink Command="{Binding SelectFileToUploadCommand}" 
                                        CommandParameter="{Binding}">
                                Attachment...
                            </Hyperlink>
                </TextBlock>

                <TextBlock Style="{StaticResource PlainText}" Margin="0 0 10 0"
                               Visibility="{Binding IsSubTaskCreatable, Converter={StaticResource TrueToVisibleConverter}}">
                            <Hyperlink Command="{Binding CreateSubTaskCommand}" 
                                        CommandParameter="{Binding}">
                                Sub-task...
                            </Hyperlink>
                </TextBlock>

                <TextBlock Style="{StaticResource PlainText}">
                            <Hyperlink Command="{Binding LinkIssueCommand}" 
                                        CommandParameter="{Binding}">
                                Link issue...
                            </Hyperlink>
                </TextBlock>
            </StackPanel>

            <!-- Create linked issue -->
            <StackPanel Orientation="Vertical" 
                        Margin="0 10 0 0"
                        Visibility="{Binding IsLinkingIssue, Converter={StaticResource TrueToVisibleConverter}}">

                <StackPanel Orientation="Horizontal">
                    <!-- link type -->
                    <Grid>

                        <ComboBox x:Name="linkTypeComboBox" ItemsSource="{Binding IssueLinkTypesList}"
                                MinWidth="{Binding Path=ActualWidth, ElementName=linkTypeText}"
                                Margin="0 0 5 0"
                                SelectedValuePath="Id"
                                SelectedValue="{Binding Path=RelationName}"
                                SelectedItem="{Binding SelectedLinkType}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Style="{StaticResource PlainText}" Text="{Binding RelationName}" />
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                            <ComboBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ComboBoxItem}">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                </Style>
                            </ComboBox.ItemContainerStyle>
                        </ComboBox>

                        <TextBlock x:Name="linkTypeText"
                            Width="80"
                            Style="{StaticResource PlainTextFaded}"
                            Visibility="{Binding SelectedItem, ElementName=linkTypeComboBox, Converter={StaticResource NullToVisibilityConverter}}"
                            IsHitTestVisible="False"
                            Text="Link type" />

                    </Grid>

                    <!-- issue -->
                    <Grid>

                        <ComboBox x:Name="linkIssueComboBox"  ItemsSource="{Binding IssueList}"
                                MinWidth="{Binding Path=ActualWidth, ElementName=linkIssueText}"
                                Margin="0 0 5 0"
                                SelectedValuePath="Id"
                                SelectedValue="{Binding Path=Key}"
                                SelectedItem="{Binding SelectedLinkIssue}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Style="{StaticResource PlainText}" Text="{Binding Key}" />
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                            <ComboBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ComboBoxItem}">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                </Style>
                            </ComboBox.ItemContainerStyle>
                        </ComboBox>

                        <TextBlock x:Name="linkIssueText"
                                Width="90"
                                Style="{StaticResource PlainTextFaded}"
                                Visibility="{Binding SelectedItem, ElementName=linkIssueComboBox, Converter={StaticResource NullToVisibilityConverter}}"
                                IsHitTestVisible="False"
                                Text="Select issue" />

                    </Grid>
                </StackPanel>

                <StackPanel Orientation="Horizontal">
                    <Button Command="{Binding ConfirmLinkIssueCommand}" CommandParameter="{Binding ElementName=This}"
                        Content="Save" 
                        HorizontalAlignment="Left"
                        Height="25" Width="75" Margin="0 10 5 10"/>

                    <Button Command="{Binding CancelLinkIssueCommand}" CommandParameter="{Binding ElementName=This}"
                        Content="Cancel" 
                        HorizontalAlignment="Left"
                        Height="25" Width="75" Margin="0 10 0 10"/>
                </StackPanel>
            </StackPanel>

            
            
            <Separator Margin="-8,5,-8,0"
                       Style="{StaticResource PaneHorizontalSeparator}" />

        <!-- Description -->
            <Label Style="{StaticResource LabelFaded}">Description:</Label>
            <Grid Margin="0 0 0 10">
                <TextBlock Text="Add a description..." 
                        TextWrapping="Wrap"
                        VerticalAlignment="Center"
                        Visibility="{Binding IsDescriptionEmpty, Converter={StaticResource TrueToVisibleConverter}}"
                        Style="{StaticResource PlainTextFaded}"/>
                    
                <TextBlock
                        Text="{Binding Issue.Fields.Description}"
                        TextWrapping="Wrap"
                        VerticalAlignment="Center"
                        Visibility="{Binding IsEditingDescription, Converter={StaticResource FalseToVisibleConverter}}"
                        Style="{StaticResource PlainText}">
                    <TextBlock.InputBindings>
                        <MouseBinding Command="{Binding EditDescriptionCommand}" MouseAction="LeftClick" />
                    </TextBlock.InputBindings>
                </TextBlock>

                <TextBox Text="{Binding Issue.Fields.Description}" 
                        AcceptsReturn="True"
                        TextWrapping="Wrap"
                        VerticalAlignment="Center"
                        Visibility="{Binding IsEditingDescription, Converter={StaticResource TrueToVisibleConverter}}"/>
            </Grid>

            <StackPanel Orientation="Horizontal"
                        Visibility="{Binding IsEditingDescription, Converter={StaticResource TrueToVisibleConverter}}">
                <Button Command="{Binding ConfirmEditDescriptionCommand}" CommandParameter="{Binding ElementName=This}"
                        Content="Save" 
                        HorizontalAlignment="Left"
                        Height="25" Width="75" Margin="0 0 5 10"/>

                <Button Command="{Binding CancelEditDescriptionCommand}" CommandParameter="{Binding ElementName=This}"
                            Content="Cancel" 
                            HorizontalAlignment="Left"
                            Height="25" Width="75" Margin="0 0 0 10"/>
            </StackPanel>

            <!-- Sub-task/s -->
            <StackPanel Orientation="Horizontal"
                            Visibility="{Binding HaveSubtasks, Converter={StaticResource TrueToVisibleConverter}}">
                <Label Style="{StaticResource LabelFaded}">Subtasks:</Label>

                <ItemsControl ItemsSource="{Binding Issue.Fields.Subtasks}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border HorizontalAlignment="Left" VerticalAlignment="Center" CornerRadius="2" Padding="5 1" Margin="0 0 5 0"  BorderThickness="1" BorderBrush="#FF4B4D50">
                                <TextBlock>
                                        <Hyperlink Command="{Binding DataContext.ShowIssueCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding}">
                                            <TextBlock FontFamily="Consolas" TextTrimming="CharacterEllipsis" ToolTip="{Binding Key, Mode=OneWay}" Text="{Binding Key, Mode=OneWay}" />
                                        </Hyperlink>
                                    </TextBlock>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>


            </StackPanel>
            <!-- Assignee -->
            <StackPanel Orientation="Horizontal">
                <Label Style="{StaticResource LabelFaded}">Assignee:</Label>

                <Grid>
                    <TextBlock Style="{StaticResource PlainText}"
                                    MinWidth="100" MinHeight="10"
                                    Text="{Binding SelectedAssignee.DisplayName, Mode=OneWay}"
                                    Visibility="{Binding IsEditingAssignee, Converter={StaticResource FalseToVisibleConverter}}">
                        <TextBlock.InputBindings>
                            <MouseBinding Command="{Binding EditAssigneeCommand}" MouseAction="LeftClick" />
                        </TextBlock.InputBindings>
                    </TextBlock>

                    <ComboBox ItemsSource="{Binding AssigneeList}"
                            Margin="0 0 5 0"
                            SelectedValuePath="Id"
                            Visibility="{Binding IsEditingAssignee, Converter={StaticResource TrueToVisibleConverter}}"
                            SelectedValue="{Binding Path=Name}"
                            SelectedItem="{Binding SelectedAssignee}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Style="{StaticResource TitleText}" Text="{Binding DisplayName}" Margin="0 0 5 0"/>
                                    <TextBlock Style="{StaticResource PlainText}" Text="{Binding Name, StringFormat=(@{0})}" />
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                        <ComboBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ComboBoxItem}">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            </Style>
                        </ComboBox.ItemContainerStyle>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeave">
                                <i:InvokeCommandAction Command="{Binding CancelEditAssigneeCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                </Grid>
            </StackPanel>

            <!-- Sprint -->
            <StackPanel Orientation="Horizontal"
                    Visibility="{Binding IsSupportingSprints, Converter={StaticResource TrueToVisibleConverter}}">
                <Label Style="{StaticResource LabelFaded}">Sprint:</Label>

                <Grid>
                    <TextBlock Text="None" 
                        TextWrapping="Wrap"
                        VerticalAlignment="Center"
                        Visibility="{Binding IsSprintEmpty, Converter={StaticResource TrueToVisibleConverter}}"
                        Style="{StaticResource PlainTextFaded}"/>
                        
                    <TextBlock Style="{StaticResource PlainText}"
                                    MinWidth="100" MinHeight="10"
                                    Text="{Binding Issue.Fields.Sprint.Name, Mode=OneWay}"
                                    Visibility="{Binding IsEditingSprint, Converter={StaticResource FalseToVisibleConverter}}">
                        <TextBlock.InputBindings>
                            <MouseBinding Command="{Binding EditSprintCommand}" MouseAction="LeftClick" />
                        </TextBlock.InputBindings>
                    </TextBlock>

                    <ComboBox ItemsSource="{Binding SprintList}"
                            Margin="0 0 5 0"
                            DisplayMemberPath="Name"
                            SelectedValuePath="Id"
                            Visibility="{Binding IsEditingSprint, Converter={StaticResource TrueToVisibleConverter}}"
                            SelectedValue="{Binding Path=Name}"
                            SelectedItem="{Binding SelectedSprint}">
                        <ComboBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ComboBoxItem}">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            </Style>
                        </ComboBox.ItemContainerStyle>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeave">
                                <i:InvokeCommandAction Command="{Binding CancelEditSprintCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                </Grid>
            </StackPanel>

            <!-- Labels -->
            <StackPanel Orientation="Horizontal">
                <Label Style="{StaticResource LabelFaded}">Labels:</Label>

                <Grid>
                    <TextBlock Text="None" 
                        TextWrapping="Wrap"
                        VerticalAlignment="Center"
                        Visibility="{Binding IsLabelsEmpty, Converter={StaticResource TrueToVisibleConverter}}"
                        Style="{StaticResource PlainTextFaded}"/>
                        
                    <Grid>
                        <ItemsControl ItemsSource="{Binding Issue.Fields.Labels}"
                                Visibility="{Binding IsEditingLabels, Converter={StaticResource FalseToVisibleConverter}}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border HorizontalAlignment="Left" VerticalAlignment="Center" CornerRadius="2" Padding="5 1" Margin="0 0 5 0"  BorderThickness="1" BorderBrush="#FF4B4D50">
                                        <TextBlock FontFamily="Consolas" TextTrimming="CharacterEllipsis" ToolTip="{Binding}" Text="{Binding}" Style="{StaticResource PlainText}"/>
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                        <TextBlock MinWidth="100" MinHeight="10">
                            <TextBlock.InputBindings>
                                <MouseBinding Command="{Binding EditLabelsCommand}" MouseAction="LeftClick" />
                            </TextBlock.InputBindings>
                        </TextBlock>
                    </Grid>

                    <ComboBox StaysOpenOnEdit="True" 
                                    ItemsSource="{Binding LabelsList}"
                                    Margin="0 0 5 0"
                                    Visibility="{Binding IsEditingLabels, Converter={StaticResource TrueToVisibleConverter}}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <CheckBox Command="{Binding DataContext.CheckedLabelsCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}" 
                                                Content="{Binding Label}" 
                                                IsChecked="{Binding CheckedStatus}" 
                                                CommandParameter="{Binding}">
                                </CheckBox>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                        <ComboBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ComboBoxItem}">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            </Style>
                        </ComboBox.ItemContainerStyle>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeave">
                                <i:InvokeCommandAction Command="{Binding CancelEditLabelsCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                </Grid>

            </StackPanel>

            <!-- FixVersions -->
            <StackPanel Orientation="Horizontal">
                <Label Style="{StaticResource LabelFaded}">Fix versions:</Label>

                <Grid>
                    <TextBlock Text="None" 
                        TextWrapping="Wrap"
                        VerticalAlignment="Center"
                        Visibility="{Binding IsFixVersionsEmpty, Converter={StaticResource TrueToVisibleConverter}}"
                        Style="{StaticResource PlainTextFaded}"/>
                        
                    <Grid>
                        <ItemsControl ItemsSource="{Binding Issue.Fields.FixVersions}"
                                Visibility="{Binding IsEditingFixVersions, Converter={StaticResource FalseToVisibleConverter}}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border HorizontalAlignment="Left" VerticalAlignment="Center" CornerRadius="2" Padding="5 1" Margin="0 0 5 0"  BorderThickness="1" BorderBrush="#FF4B4D50">
                                        <TextBlock FontFamily="Consolas" TextTrimming="CharacterEllipsis" ToolTip="{Binding Name}" Text="{Binding Name}" Style="{StaticResource PlainText}"/>
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                        <TextBlock MinWidth="100" MinHeight="10">
                            <TextBlock.InputBindings>
                                <MouseBinding Command="{Binding EditFixVersionsCommand}" MouseAction="LeftClick" />
                            </TextBlock.InputBindings>
                        </TextBlock>
                    </Grid>

                    <ComboBox StaysOpenOnEdit="True"
                                    ItemsSource="{Binding FixVersionsList}"
                                    Margin="0 0 5 0"
                                    Visibility="{Binding IsEditingFixVersions, Converter={StaticResource TrueToVisibleConverter}}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <CheckBox Command="{Binding DataContext.CheckedFixVersionCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}" 
                                                Content="{Binding Name}" 
                                                IsChecked="{Binding CheckedStatus}" 
                                                CommandParameter="{Binding}">
                                </CheckBox>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                        <ComboBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ComboBoxItem}">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            </Style>
                        </ComboBox.ItemContainerStyle>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeave">
                                <i:InvokeCommandAction Command="{Binding CancelEditFixVersionsCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                </Grid>

            </StackPanel>

            <!-- AffectsVersions -->
            <StackPanel Orientation="Horizontal"
                            Visibility="{Binding IsAffectsVersionsEditable, Converter={StaticResource TrueToVisibleConverter}}">
                <Label Style="{StaticResource LabelFaded}">Affects versions:</Label>

                <Grid>
                    <TextBlock Text="None" 
                        TextWrapping="Wrap"
                        VerticalAlignment="Center"
                        Visibility="{Binding IsAffectsVersionsEmpty, Converter={StaticResource TrueToVisibleConverter}}"
                        Style="{StaticResource PlainTextFaded}"/>
                        
                    <Grid>
                        <ItemsControl ItemsSource="{Binding Issue.Fields.Versions}"
                                Visibility="{Binding IsEditingAffectsVersions, Converter={StaticResource FalseToVisibleConverter}}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border HorizontalAlignment="Left" VerticalAlignment="Center" CornerRadius="2" Padding="5 1" Margin="0 0 5 0"  BorderThickness="1" BorderBrush="#FF4B4D50">
                                        <TextBlock FontFamily="Consolas" TextTrimming="CharacterEllipsis" ToolTip="{Binding Name}" Text="{Binding Name}" Style="{StaticResource PlainText}"/>
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                        <TextBlock MinWidth="100" MinHeight="10">
                            <TextBlock.InputBindings>
                                <MouseBinding Command="{Binding EditAffectsVersionsCommand}" MouseAction="LeftClick" />
                            </TextBlock.InputBindings>
                        </TextBlock>
                    </Grid>

                    <ComboBox StaysOpenOnEdit="True" 
                                    ItemsSource="{Binding AffectsVersionsList}"
                                    Margin="0 0 5 0"
                                    Visibility="{Binding IsEditingAffectsVersions, Converter={StaticResource TrueToVisibleConverter}}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <CheckBox Command="{Binding DataContext.CheckedAffectsVersionCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}" 
                                                Content="{Binding Name}" 
                                                IsChecked="{Binding CheckedStatus}" 
                                                CommandParameter="{Binding}">
                                </CheckBox>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                        <ComboBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ComboBoxItem}">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            </Style>
                        </ComboBox.ItemContainerStyle>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeave">
                                <i:InvokeCommandAction Command="{Binding CancelEditAffectsVersionsCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                </Grid>

            </StackPanel>

            <!-- Linked issues -->
            <StackPanel Orientation="Vertical" 
                        Visibility="{Binding HaveLinks, Converter={StaticResource TrueToVisibleConverter}}">
                <Label Style="{StaticResource LabelFaded}">Links:</Label>

                <ListBox ItemsSource="{Binding InwardLinkedIssueList}"
                            ScrollViewer.VerticalScrollBarVisibility="Disabled" 
                            BorderThickness="0">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <EventSetter Event="MouseDoubleClick" Handler="AttachmentSelected_MouseDoubleClick"/>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical" IsItemsHost="True" />
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">

                                <Button HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0 0 5 0" 
                                        Command="{Binding DataContext.DeleteLinkedIssueCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}}" 
                                        CommandParameter="{Binding}"
                                        Content="Delete" 
                                        Height="20"/>
                                
                                <Border HorizontalAlignment="Left" VerticalAlignment="Center" CornerRadius="2" Padding="5 1" Margin="0 0 5 0" BorderThickness="1" BorderBrush="#FF4B4D50">
                                    <TextBlock FontFamily="Consolas" TextTrimming="CharacterEllipsis" ToolTip="{Binding Type.Inward, Mode=OneWay}" Text="{Binding Type.Inward, Mode=OneWay}" />
                                </Border>
                                <Border HorizontalAlignment="Left" VerticalAlignment="Center" CornerRadius="2" Padding="5 1" Margin="0 0 5 0" BorderThickness="1" BorderBrush="#FF4B4D50">
                                    <TextBlock FontFamily="Consolas" TextTrimming="CharacterEllipsis" ToolTip="{Binding InwardIssue.Key, Mode=OneWay}" Text="{Binding InwardIssue.Key, Mode=OneWay}" />
                                </Border>
                                
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

                <ListBox ItemsSource="{Binding OutwardLinkedIssueList}"
                            ScrollViewer.VerticalScrollBarVisibility="Disabled" 
                            BorderThickness="0">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <EventSetter Event="MouseDoubleClick" Handler="AttachmentSelected_MouseDoubleClick"/>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical" IsItemsHost="True" />
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">

                                <Button HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0 0 5 0"
                                        Command="{Binding DataContext.DeleteLinkedIssueCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}}" 
                                        CommandParameter="{Binding}"
                                        Content="Delete" 
                                        Height="20"/>
                                
                                <Border HorizontalAlignment="Left" VerticalAlignment="Center" CornerRadius="2" Padding="5 1" Margin="0 0 5 0" BorderThickness="1" BorderBrush="#FF4B4D50">
                                    <TextBlock FontFamily="Consolas" TextTrimming="CharacterEllipsis" ToolTip="{Binding Type.Outward, Mode=OneWay}" Text="{Binding Type.Outward, Mode=OneWay}" />
                                </Border>
                                <Border HorizontalAlignment="Left" VerticalAlignment="Center" CornerRadius="2" Padding="5 1" Margin="0 0 5 0" BorderThickness="1" BorderBrush="#FF4B4D50">
                                    <TextBlock FontFamily="Consolas" TextTrimming="CharacterEllipsis" ToolTip="{Binding OutwardIssue.Key, Mode=OneWay}" Text="{Binding OutwardIssue.Key, Mode=OneWay}" />
                                </Border>
                                
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </StackPanel>

            <!-- Attachments -->
            <StackPanel Orientation="Vertical" 
                            Visibility="{Binding HaveAttachments, Converter={StaticResource TrueToVisibleConverter}}">
                <Label Style="{StaticResource LabelFaded}">Attachments:</Label>

                <ListBox ItemsSource="{Binding AttachmentsList}"
                            ScrollViewer.VerticalScrollBarVisibility="Disabled" 
                            BorderThickness="0">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <EventSetter Event="MouseDoubleClick" Handler="AttachmentSelected_MouseDoubleClick"/>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical" IsItemsHost="True" />
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Border Height="30" HorizontalAlignment="Stretch" CornerRadius="2" Padding="5 1" BorderThickness="1" BorderBrush="#FF4B4D50">
                                    <DockPanel>

                                        <Image Width="14">
                                            <Image.Source>
                                                <BitmapImage DecodePixelWidth="14" UriSource="../Images/file_icon.png" />
                                            </Image.Source>
                                        </Image>

                                        <TextBlock Style="{StaticResource PlainText}" Text="{Binding Filename}" Margin="0 0 10 0"/>
                                        <TextBlock Text="{Binding Size, StringFormat={}{0} bytes}" Style="{StaticResource PlainText}"/>

                                        <Button HorizontalAlignment="Right" VerticalAlignment="Center" Command="{Binding DataContext.DeleteAttachmentCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}}" 
                                            CommandParameter="{Binding}"
                                            Content="Delete" 
                                            Height="20"/>

                                    </DockPanel>
                                </Border>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </StackPanel>
        </StackPanel>
    </ScrollViewer>
</UserControl>
